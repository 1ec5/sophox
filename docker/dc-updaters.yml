version: '2.3'

services:

  osm2pgsql-updater:
    # continuously update from live OSM data to PostgresSQL (geoshapes)
    image: sophox/osm2pgsql_osmium
    command: /osm-to-pgsql/osm2pgsql-update.sh
    # restart: on-failure
    volumes:
      - "${STATUS_DIR}:/app-status:rw"               # status files (e.g. file.downloaded)
      - "${REPO_DIR}/osm-to-pgsql:/osm-to-pgsql:ro"  # osm2pgsql script
      - "${OSM_PGSQL_DATA_DIR}:/osm-pgsql:rw"        # nodes.cache storage
    environment:
      FLAG_PG_IMPORTED: "/app-status/osm-pgsql.imported"
      IS_FULL_PLANET: "${IS_FULL_PLANET}"
      LOOP_SLEEP: 60
      OSM_PGSQL_CODE: "/osm-to-pgsql"
      OSM_PGSQL_CPU_UPDATE: 2
      OSM_PGSQL_DATA: "/osm-pgsql"
      OSM_PGSQL_MEM_UPDATE: "${MEM_OSM_PGSQL_UPDATE_MB}"
      POSTGRES_DB: gis
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD:
      POSTGRES_USER: sophox
    networks:
      - postgres_net
    logging:
      driver: json-file
      options: {max-file: "3", max-size: "10m"}

  osm2rdf-update:
    # This container continuously updates from OSM data to Blazegraph
    build: "${BUILD_DIR}/osm2rdf"
    working_dir: "/app-osm2rdf"
    command: "./osm2rdf-update.sh"
    # restart: on-failure
    volumes:
      - "${OSM_RDF_DATA_DIR}:/osm-rdf:rw"
      - "${REPO_DIR}/osm2rdf:/app-osm2rdf:ro"
      - "${STATUS_DIR}:/app-status:rw"
    environment:
      FLAG_TTL_IMPORTED: "/app-status/osm-rdf.imported"
      IS_FULL_PLANET: "${IS_FULL_PLANET}"
      MAX_DOWNLOAD: 5120
      OSM_RDF_DATA: "/osm-rdf"
      BLAZEGRAPH_URL: "${BLAZEGRAPH_URL}"
      UPDATE_URL: "https://planet.openstreetmap.org/replication/minute"
    networks:
      - blazegraph_net
    logging:
      driver: json-file
      options: {max-file: "3", max-size: "10m"}

  pageviews-update:
    # This container updates Wikipedia pageview data
    build: "${BUILD_DIR}/osm2rdf"
    working_dir: "/app-osm2rdf"
    command: "./pageviews.sh"
    volumes:
    - "${REPO_DIR}/osm2rdf:/app-osm2rdf:ro"
    - "${STATUS_DIR}:/app-status:rw"
    environment:
      BLAZEGRAPH_URL: "${BLAZEGRAPH_URL}"
      FLAG_PV_BACKFILLED: "/app-status/pageviews.backfilled"
      OSM_RDF_MAX_HR_FILES: "24"
    networks:
    - blazegraph_net
    logging:
      driver: json-file
      options: {max-file: "3", max-size: "10m"}

  blazegraph-updater:
    # This container waits for FLAG_TTL_PARSED, imports TTLs into Blazegraph & sets FLAG_TTL_IMPORTED,
    # and continuously updates from OSM wiki
    image: "${BLAZEGRAPH_IMAGE}"
    working_dir: /app-script
    command: "./bg-updater.sh"
    # restart: always
    volumes:
    - "${STATUS_DIR}:/app-status:rw"
    - "${BLAZEGRAPH_APP_DIR}:/app:ro"
    - "${REPO_DIR}/docker/blazegraph-updater:/app-script:ro"
    environment:
      BLAZEGRAPH_APP: "/app"
      BLAZEGRAPH_HOST: "http://blazegraph:9999"
      FLAG_WB_INITIALIZED: "/app-status/wikibase.initialized"  # runUpdate was already init-ed with a constant start date
      WB_CONCEPT_URI: "${WB_CONCEPT_URI}"
    networks:
      - blazegraph_net
    logging:
      driver: json-file
      options: {max-file: "3", max-size: "10m"}

networks:
  postgres_net:
  blazegraph_net:
