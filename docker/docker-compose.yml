version: '3'

services:

  traefik:
    image: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${REPO_DIR}/docker/traefik.toml:/traefik.toml"
      - "${ACME_FILE}:/acme.json"
    container_name: traefik

#  web:
#    build: https://github.com/nickpeihl/wikidata-query-gui.git#dockerize
#    ports:
#      - "80"
#    depends_on:
#      - mapshaper
#    labels:
#      - "traefik.enable=true"
#      - "traefik.frontend.rule=Host:staging.sophox.org"

  mapshaper:
    image: crazycapivara/docker-mapshaper
    ports:
      - "5555"
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:staging.sophox.org;PathPrefixStrip:/mapshaper/"

#  pg-updater:
#    image: nickpeihl/osmupdater:latest
#    command: /var/lib/osm2pgsql/osmUpdate.sh
#    networks:
#    - postgres_conn
#    volumes:
#    - wdqs_data:/var/lib/wdqs
#    - temp_data:/var/tmp
#    - ./:/var/lib/osm2pgsql
#    depends_on:
#    - postgres
#    env_file: .env

#  osmregions:
#    image: nickpeihl/osm-regions-server:latest
#    ports:
#    - "9978"
#    networks:
#    - postgres_conn
#    - wdqs_conn
#    depends_on:
#    - postgres

  postgres:
    image: "openmaptiles/postgis:2.9"
    # DblCheck: Nick said it makes import more efficient
    command: -c 'max_wal_size=5GB'
    volumes:
      - "${DATA_DIR}/postgres:/var/lib/postgresql/data"
    networks:
      - postgres_conn
    ports:
      - "5432"
    environment:
      POSTGRES_DB: gis
      POSTGRES_USER: sophox
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

networks:
  postgres_conn:
  wdqs_conn:
