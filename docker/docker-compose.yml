version: '3'

services:

#  traefik:
#    image: traefik
#    restart: always
#    ports:
#      - "80:80"
#      - "443:443"
#      - "127.0.0.1:8080:8080"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "${REPO_DIR}/docker/traefik.toml:/traefik.toml"
#      - "${ACME_FILE}:/acme.json"
#    container_name: traefik

  postgres-updater:
    image: sophox/osm2pgsql_osmium
    command: /var/lib/osm2pgsql/osmUpdate.sh
    networks:
    - postgres_conn
    volumes:
    - "${REPO_DIR}/osm-to-pgsql:/osm-to-pgsql"
    - "${DATA_DIR}/osm-pgsql:/osm-pgsql"
    - "${DOWNLOAD_DIR}:/downloads"
    environment:
      OSM_FILE: "/downloads/${OSM_FILE}"
      POSTGRES_DB: gis
      POSTGRES_USER: sophox
      POSTGRES_PASSWORD:
      OSM_PGSQL_DATA: "/osm-pgsql"
      OSM_PGSQL_CODE: "/osm-to-pgsql"
      OSM_PGSQL_MEM_IMPORT: 8000
      OSM_PGSQL_MEM_UPDATE: 500
      OSM_PGSQL_CPU_IMPORT: 6
      OSM_PGSQL_CPU_UPDATE: 6
      LOOP_SLEEP: 60
    depends_on:
    - postgres

#  osmregions:
#    image: nickpeihl/osm-regions-server:latest
#    ports:
#    - "9978"
#    networks:
#    - postgres_conn
#    - wdqs_conn
#    depends_on:
#    - postgres


  #  web:
  #    build: https://github.com/nickpeihl/wikidata-query-gui.git#dockerize
  #    ports:
  #      - "80"
  #    depends_on:
  #      - mapshaper
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.frontend.rule=Host:staging.sophox.org"

  #  mapshaper:
  #    image: crazycapivara/docker-mapshaper
  #    ports:
  #      - "5555"
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.frontend.rule=Host:staging.sophox.org;PathPrefixStrip:/mapshaper/"


  postgres:
    image: "openmaptiles/postgis:2.9"
    # DblCheck: Nick said it makes import more efficient
    command: -c 'max_wal_size=5GB'
    volumes:
      - "${DATA_DIR}/postgres:/var/lib/postgresql/data"
    networks:
      - postgres_conn
    ports:
      - "5432"
    environment:
      POSTGRES_DB: gis
      POSTGRES_USER: sophox
      POSTGRES_PASSWORD:

networks:
  postgres_conn:
  wdqs_conn:
