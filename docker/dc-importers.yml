version: '2.3'

services:

  osm2pgsql-import:
    # Parse osm file into Postgres DB, and continuously update from live OSM data
    image: sophox/osm2pgsql_osmium
    volumes:
      - "${DOWNLOAD_DIR}:/downloads:rw"              # downloaded planet file
      - "${OSM_PGSQL_DATA_DIR}:/osm-pgsql:rw"
      - "${OSM_PGSQL_TEMP_DIR}:/osm-pgsql-temp:rw"
      - "${REPO_DIR}/osm-to-pgsql:/osm-to-pgsql:ro"  # source code
      - "${STATUS_DIR}:/app-status:rw"               # status files (e.g. file.downloaded)
    environment:
      FLAG_PG_IMPORTED: "/app-status/osm-pgsql.imported"
      IS_FULL_PLANET: "${IS_FULL_PLANET}"
      OSM_FILE_PATH: "/downloads/${OSM_FILE}"
      OSM_PGSQL_CODE: "/osm-to-pgsql"
      OSM_PGSQL_CPU_IMPORT: 4
      OSM_PGSQL_DATA: "/osm-pgsql"
      OSM_PGSQL_MEM_IMPORT: "${MEM_OSM_PGSQL_IMPORT_MB}"
      OSM_PGSQL_TEMP: "/osm-pgsql-temp"
      POSTGRES_DB: gis
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD:
      POSTGRES_USER: sophox
    command: /osm-to-pgsql/osm2pgsql-import.sh
    networks:
      - postgres_net
    logging:
      driver: json-file
      options: {max-file: "3", max-size: "10m"}

  osm2rdf-import:
    # This container parses data into TTL files (sets FLAG_TTL_PARSED),
    # and imports them into Blazegraph (sets FLAG_TTL_IMPORTED)
    build: "${BUILD_DIR}/osm2rdf"
    mem_limit: "${MEM_OSM_RDF_LIMIT_MB}m"
    memswap_limit: "${MEM_OSM_RDF_LIMIT_MB}m"
    mem_swappiness: 0
    working_dir: "/app-osm2rdf"
    command: "./osm2rdf-import.sh"
    volumes:
      - "${BLAZEGRAPH_APP_DIR}:/app-blazegraph:ro"
      - "${DOWNLOAD_DIR}:/downloads:rw"
      - "${OSM_RDF_DATA_DIR}:/osm-rdf:rw"
      - "${OSM_RDF_TEMP_DIR}:/osm-rdf-temp:rw"
      - "${OSM_TTLS_DIR}:/osm-rdf-ttls:rw"
      - "${REPO_DIR}/osm2rdf:/app-osm2rdf:ro"
      - "${STATUS_DIR}:/app-status:rw"
    environment:
      BLAZEGRAPH_APP: "/app-blazegraph"
      BLAZEGRAPH_HOST: "http://blazegraph:9999"
      FLAG_TTL_IMPORTED: "/app-status/osm-rdf.imported" # Set this flag after importing TTLs into Blazegraph
      FLAG_TTL_PARSED: "/app-status/osm-rdf.parsed"     # Set this flag after parsing into TTLs
      IS_FULL_PLANET: "${IS_FULL_PLANET}"
      OSM_FILE_PATH: "/downloads/${OSM_FILE}"
      OSM_RDF_DATA: "/osm-rdf"
      OSM_RDF_MAX_STMTS: "${OSM_RDF_MAX_STMTS}"
      OSM_RDF_TEMP: "/osm-rdf-temp"
      OSM_RDF_TTLS: "/osm-rdf-ttls"
      OSM_RDF_WORKERS: "${OSM_RDF_WORKERS}"
    networks:
      - blazegraph_net
    logging:
      driver: json-file
      options: {max-file: "3", max-size: "10m"}

networks:
  proxy_net:
    external: true
  postgres_net:
  blazegraph_net:
